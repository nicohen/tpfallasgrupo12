#created on: 11/04/2009
package com.fiuba.fallas.futbol;

#list any import classes here.
import com.fiuba.fallas.futbol.Jugador
import com.fiuba.fallas.futbol.Main
import com.fiuba.fallas.futbol.PosicionPosible

/** R01
* Al tener menos de 7 en el atributo atajando, descarto la posibilidad de que sea arquero
*/
rule "No Arquero seguro"
	salience 200
	when
		$jugador : Jugador ($atajando : atajando < 7, $id : id)
		$pp : PosicionPosible( idJugador == $id , posicion=="Arquero")
	then 
		System.out.println($jugador.getNombre() +" no es arquero seguro");
		retract($pp);
		update($jugador);		
end

/** R02 
* Al tener menos de 7 en el atributo quites, descarto la posibilidad de que sea arquero
*/
rule "No Defensor seguro"
	salience 200
	when
		$jugador : Jugador ($atajando : quite < 7, $id : id)
		$pp : PosicionPosible( idJugador == $id , posicion=="Defensor")
	then 
		System.out.println($jugador.getNombre() +" no es defensor seguro");
		retract($pp);
		update($jugador);		
end

/** R03
* Al tener menos de 7 en el atributo pases, descarto la posibilidad de que sea volante
*/
rule "No Volante seguro"
	salience 200
	when
		$jugador : Jugador ($atajando : pases < 7, $id : id)
		$pp : PosicionPosible( idJugador == $id , posicion=="Volante")
	then 
		System.out.println($jugador.getNombre() +" no es Volante seguro");
		retract($pp);		
		update($jugador);
end

/** R04
* Al tener menos de 7 en el atributo definicion, descarto la posibilidad de que sea volante
*/
rule "No Delantero seguro"
	salience 200
	when
		$jugador : Jugador ($atajando : definicion < 7, $id : id)
		$pp : PosicionPosible( idJugador == $id , posicion=="Delantero")
	then 
		System.out.println($jugador.getNombre() +" no es Delantero seguro");
		retract($pp);		
		update($jugador);
end

/** R05
* Si no entra en ninguna categoría le asigno una especial
*/
rule "No entra en ninguna"
	salience 20
	no-loop
	when
		$jugador : Jugador ($id : id)
		not (PosicionPosible( idJugador == $id))
	then 
		System.err.println($jugador.getNombre() +" no califica para ninguna posicion");
end

/****   5 REGLAS   *****/
/****   5 REGLAS   *****/
/****   5 REGLAS   *****/

/** R06
* Si tiene una sola categoría la pongo como definitiva
*/
rule "Una sola categoría"
	salience 30
	no-loop
	when	
		$pp : PosicionPosible( $idj : idJugador , $pos : posicion )
		$jugador : Jugador (id == $idj, $nombre : nombre);
		not (PosicionPosible( idJugador == $idj, posicion != $pos))
	then 
		System.out.println($nombre +" es necesariamente " + $pp.getPosicion());
		$jugador.setPosicion($pp.getPosicion());
		update($jugador);
end

/** R07
* Si no es nada reasigno -> delantero?
*/
rule "No es nada Reasigno - posible delantero"
	salience 15
	no-loop
	when	
		$jugador : Jugador ($idj : id, cabeza>4 && velocidad>4,$nombre : nombre);
		not (PosicionPosible( idJugador == $idj))
	then 
		System.out.println($nombre +" reasignado a Delantero");
		$jugador.setPosicion("Delantero");
end

/** R08
* Si no es nada reasigno -> volante?
*/
rule "No es nada Reasigno - posible volante"
	salience 15
	no-loop
	when	
		$jugador : Jugador ($idj : id, resistencia>3 && quite>3 && velocidad>3,$nombre : nombre);
		not (PosicionPosible( idJugador == $idj))
	then 
		System.out.println($nombre +" reasignado a Volante");
		$jugador.setPosicion("Volante");
end

/** R09
* Si no es nada reasigno -> defensor?
*/
rule "No es nada Reasigno - posible defensor"
	salience 15
	no-loop
	when	
		$jugador : Jugador ($idj : id, resistencia>3 && quite>3 && cabeza>4,$nombre : nombre);
		not (PosicionPosible( idJugador == $idj))
	then 
		System.out.println($nombre +" reasignado a Defensor");
		$jugador.setPosicion("Defensor");
end

/** R10
* Si no es nada reasigno -> arquero?
*/
rule "No es nada Reasigno - posible arquero"
	salience 15
	no-loop
	when	
		$jugador : Jugador ($idj : id, resistencia>3 && atajando>4,$nombre : nombre);
		not (PosicionPosible( idJugador == $idj))
	then 
		System.out.println($nombre +" reasignado a Defensor");
		$jugador.setPosicion("Arquero");
end

/***   DESAMBIGUACION   ***/
/** R11
* Si es apto para las 4 posiciones?
*/
rule "Super Jugador ->Plus Delantero"
	salience 35
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, definicion >9);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp3: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
		$pp4: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" SuperJugador -> Como delantero!");
		$jugador.setPosicion("Delantero");
		retract($pp1);
		retract($pp2);
		retract($pp3);
end

/** R12
* Si es apto para las 4 posiciones?
*/
rule "Super Jugador ->Plus Volante"
	salience 35
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, pases >9);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp3: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
		$pp4: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" SuperJugador -> Como volante!");
		$jugador.setPosicion("Volante");
		retract($pp1);
		retract($pp2);
		retract($pp4);
end

/** R13
* Si es apto para las 4 posiciones?
*/
rule "Super Jugador ->Plus Defensor"
	salience 35
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, quite >9);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp3: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
		$pp4: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" SuperJugador -> Como defensor!");
		$jugador.setPosicion("Defensor");
		retract($pp1);
		retract($pp3);
		retract($pp4);
end

/** R14
* Si es apto para las 4 posiciones?
*/
rule "Super Jugador ->Plus Arquero"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, atajando >9);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp3: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
		$pp4: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" SuperJugador -> Como arquero!");
		$jugador.setPosicion("Arquero");
		retract($pp2);
		retract($pp3);
		retract($pp4);
end

/** R15
* Si es apto para 3 posiciones (Arq, Def, Vol)
*/
rule "ARQ, def, vol"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, atajando > quite,atajando > pases);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp3: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
	then 
		System.out.println($nombre +"  tiene 3 posibles -> Como arquero!");
		$jugador.setPosicion("Arquero");
		retract($pp2);
		retract($pp3);
end

/** R16
* Si es apto para 3 posiciones (Arq, Def, Vol)
*/
rule "Arq, DEF, vol"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, atajando <= quite,atajando >= pases);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp3: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
	then 
		System.out.println($nombre +" tiene 3 posibles -> Como defensor!");
		$jugador.setPosicion("Defensor");
		retract($pp1);
		retract($pp3);
end

/** R17
* Si es apto para 3 posiciones (Arq, Def, Vol)
*/
rule "Arq, Def, VOL"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, atajando <= quite,atajando >= pases);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp3: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
	then 
		System.out.println($nombre +" tiene 3 posibles -> Como volante!");
		$jugador.setPosicion("Volante");
		retract($pp1);
		retract($pp2);
end

/** R18
* Si es apto para 3 posiciones (Arq, Def, Del)
*/
rule "ARQ, Def, Del"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, atajando >= quite,quite >= definicion);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp3: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 3 posibles -> Como Arquero!");
		$jugador.setPosicion("Arquero");
		retract($pp2);
		retract($pp3);
end


/** R19
* Si es apto para 3 posiciones (Arq, Def, Del)
*/
rule "Arq, DEF, Del"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, atajando <= quite,quite >= definicion);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp3: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 3 posibles -> Como Defensor!");
		$jugador.setPosicion("Defensor");
		retract($pp1);
		retract($pp3);
end


/** R20
* Si es apto para 3 posiciones (Arq, Def, Del)
*/
rule "Arq, Def, DEL"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, atajando <= quite,quite <= definicion);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp3: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 3 posibles -> Como Delantero!");
		$jugador.setPosicion("Delantero");
		retract($pp1);
		retract($pp2);
end

/** R21
* Si es apto para 3 posiciones (Arq, Vol, Del)
*/
rule "ARQ, Vol, Del"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, atajando >= pases,pases >= definicion);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
		$pp3: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 3 posibles -> Como Arquero!");
		$jugador.setPosicion("Arquero");
		retract($pp2);
		retract($pp3);
end


/** R22
* Si es apto para 3 posiciones (Arq, Vol, Del)
*/
rule "Arq, VOL, Del"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, atajando <= pases,pases >= definicion);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
		$pp3: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 3 posibles -> Como Volante!");
		$jugador.setPosicion("Volante");
		retract($pp1);
		retract($pp3);
end

/** R23
* Si es apto para 3 posiciones (Arq, Vol, Del)
*/
rule "Arq, Vol, DEL"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, atajando <= pases,pases <= definicion);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
		$pp3: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 3 posibles -> Como Delantero!");
		$jugador.setPosicion("Delantero");
		retract($pp1);
		retract($pp2);
end

/** R24
* Si es apto para 3 posiciones (Def, Vol, Del)
*/
rule "DEF, Vol, Del"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, quite >= pases,pases >= definicion);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
		$pp3: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 3 posibles -> Como Defensor!");
		$jugador.setPosicion("Defensor");
		retract($pp2);
		retract($pp3);
end

/** R25
* Si es apto para 3 posiciones (Def, Vol, Del)
*/
rule "Def, VOL, Del"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, quite <= pases,pases >= definicion);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
		$pp3: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 3 posibles -> Como Volante!");
		$jugador.setPosicion("Volante");
		retract($pp1);
		retract($pp3);
end

/** R26
* Si es apto para 3 posiciones (Def, Vol, Del)
*/
rule "Def, Vol, DEL"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, quite <= pases,pases <= definicion);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
		$pp3: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 3 posibles -> Como Delantero!");
		$jugador.setPosicion("Delantero");
		retract($pp1);
		retract($pp2);
end

/** R27
* Si es apto para 2 posiciones (Arq, Def)
*/
rule "ARQ, Def"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  quite< atajando);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Arquero!");
		$jugador.setPosicion("Arquero");
		retract($pp2);
end

/** R28
* Si es apto para 2 posiciones (Arq, Def)
*/
rule "Arq, DEF"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  quite > atajando);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Defensor!");
		$jugador.setPosicion("Defensor");
		retract($pp1);
end

/** R29
* Si es apto para 2 posiciones (Arq, Vol)
*/
rule "ARQ, Vol"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  pases < atajando);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Arquero!");
		$jugador.setPosicion("Arquero");
		retract($pp2);
end

/** R30
* Si es apto para 2 posiciones (Arq, Vol)
*/
rule "Arq, VOL"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  pases> atajando);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Volante!");
		$jugador.setPosicion("Volante");
		retract($pp1);
end

/** R31
* Si es apto para 2 posiciones (Arq, Del)
*/
rule "ARQ, Del"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  definicion < atajando);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Arquero!");
		$jugador.setPosicion("Arquero");
		retract($pp2);
end

/** R32
* Si es apto para 2 posiciones (Arq, Del)
*/
rule "Arq, DEL"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  definicion > atajando);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Delantero!");
		$jugador.setPosicion("Delantero");
		retract($pp1);
end

/** R33
* Si es apto para 2 posiciones (Def, Vol)
*/
rule "DEF, Vol"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  quite > pases);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Defensor!");
		$jugador.setPosicion("Defensor");
		retract($pp2);
end


/** R34
* Si es apto para 2 posiciones (Def, Vol)
*/
rule "Def, VOL"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  quite < pases);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Volante!");
		$jugador.setPosicion("Volante");
		retract($pp1);
end

/** R35
* Si es apto para 2 posiciones (Def, Del)
*/
rule "DEF, Del"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  quite > definicion);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Defensor!");
		$jugador.setPosicion("Defensor");
		retract($pp2);
end

/** R36
* Si es apto para 2 posiciones (Def, Del)
*/
rule "Def, DEL"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  quite < definicion);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Delantero!");
		$jugador.setPosicion("Delantero");
		retract($pp1);
end

/** R37
* Si es apto para 2 posiciones (Vol, Del)
*/
rule "VOL, Del"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  pases > definicion);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Volante!");
		$jugador.setPosicion("Volante");
		retract($pp2);
end

/** R38
* Si es apto para 2 posiciones (Vol, Del)
*/
rule "Vol, DEL"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  pases < definicion);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Delantero!");
		$jugador.setPosicion("Delantero");
		retract($pp1);
end

/** R39
* Si es apto para 2 posiciones (Vol, Del)
*/
rule "VOL, DEL"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, pases==definicion, cabeza <= quite);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Volante!");
		$jugador.setPosicion("Volante");
		retract($pp2);
end


/** R40
* Si es apto para 2 posiciones (Vol, Del)
*/
rule "vol, del"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, pases==definicion, cabeza > quite);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Delantero!");
		$jugador.setPosicion("Delantero");
		retract($pp1);
end

/** R41
* Si es apto para 2 posiciones (Def, Del)
*/
rule "DEF, DEL"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  quite == definicion, velocidad>cabeza);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Delantero!");
		$jugador.setPosicion("Delantero");
		retract($pp1);
end

/** R42
* Si es apto para 2 posiciones (Def, Del)
*/
rule "Def, Del"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  quite == definicion, velocidad<=cabeza);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Defensor!");
		$jugador.setPosicion("Defensor");
		retract($pp2);
end

/** R43
* Si es apto para 2 posiciones (Def, Vol)
*/
rule "DEF, VOL"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  quite == pases, velocidad > cabeza);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Volante!");
		$jugador.setPosicion("Volante");
		retract($pp1);
end

/** R44
* Si es apto para 2 posiciones (Def, Vol)
*/
rule "def, vol"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  quite == pases, velocidad <= cabeza);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Defensor!");
		$jugador.setPosicion("Defensor");
		retract($pp2);
end

/** R45
* Si es apto para 2 posiciones (Arq, Del)
*/
rule "ARQ, DEL"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  definicion == atajando, resistencia >= velocidad);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Delantero!");
		$jugador.setPosicion("Delantero");
		retract($pp1);
end

/** R46
* Si es apto para 2 posiciones (Arq, Del)
*/
rule "Arq, Del"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  definicion == atajando, resistencia < velocidad);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Delantero")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Arquero!");
		$jugador.setPosicion("Arquero");
		retract($pp2);
end

/** R47
* Si es apto para 2 posiciones (Arq, Vol)
*/
rule "ARQ, VOL"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  pases == atajando, resistencia > quite);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Arquero!");
		$jugador.setPosicion("Arquero");
		retract($pp2);
end

/** R48
* Si es apto para 2 posiciones (Arq, Vol)
*/
rule "Arg, Vol"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  pases == atajando, resistencia <= quite);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Volante")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Volante!");
		$jugador.setPosicion("Volante");
		retract($pp1);
end

/** R49
* Si es apto para 2 posiciones (Arq, Def)
*/
rule "ARQ, DEF"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  quite == atajando, resistencia > velocidad);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Arquero!");
		$jugador.setPosicion("Arquero");
		retract($pp2);
end

/** R50
* Si es apto para 2 posiciones (Arq, Def)
*/
rule "Arq, Def"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre,  quite == atajando, resistencia <= velocidad);
		$pp1: PosicionPosible ( idJugador ==$idj , posicion =="Arquero")
		$pp2: PosicionPosible ( idJugador ==$idj , posicion =="Defensor")
	then 
		System.out.println($nombre +" tiene 2 posibles -> Como Defensor!");
		$jugador.setPosicion("Defensor");
		retract($pp1);
end

