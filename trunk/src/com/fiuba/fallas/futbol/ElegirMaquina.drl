#created on: 11/04/2009
package com.fiuba.fallas;

#list any import classes here.
import com.fiuba.fallas.futbol.Maquina
import com.fiuba.fallas.futbol.Main
import com.fiuba.fallas.futbol.PosicionPosible

/** R01
* Al tener menos de 7 en el atributo costo, descarto la posibilidad de que sea arquero
* Si el costo es menor a 10, descarto la posibilidad de economizar costos
*/
rule "No economizo costos seguro"
	salience 200
	when
		$jugador : Jugador ($costo : costo < 10, $id : id)
		$pp : estadoPosible( idJugador == $id , estado=="Arquero")
	then 
		System.out.println($jugador.getNombre() +" no economizo costos materiales seguro");
		retract($pp);
		update($jugador);		
end

/** R02 
* Al tener menos de 7 en el atributo CostoMOs, descarto la posibilidad de que sea arquero
* Al tener menos de 7 en el atributo costoMO, descarto la posibilidad de economizar mano de obra
*/
rule "No Defensor seguro"
	salience 200
	when
		$jugador : Jugador ($costo : CostoMO < 7, $id : id)
		$pp : estadoPosible( idJugador == $id , estado=="Defensor")
	then 
		System.out.println($jugador.getNombre() +" no economizo mano de obra seguro");
		retract($pp);
		update($jugador);		
end

/** R03
* Al tener menos de 7 en el atributo amortizacion, descarto la posibilidad de que sea volante
* Al tener menos de 7 en el atributo amortizacion, descarto la posibilidad de comprar nueva maquinaria
*/
rule "No Volante seguro"
	salience 200
	when
		$jugador : Jugador ($costo : amortizacion < 7, $id : id)
		$pp : estadoPosible( idJugador == $id , estado=="Volante")
	then 
		System.out.println($jugador.getNombre() +" no compro maquinaria");
		retract($pp);		
		update($jugador);
end

/** R04
* Al tener menos de 7 en el atributo definicion, descarto la posibilidad de que sea volante
* Al tener menos de 7 en el atributo eficacia, descarto la posibilidad de realizar mantenimiento
*/
rule "No Delantero seguro"
	salience 200
	when
		$jugador : Jugador ($costo : definicion < 7, $id : id)
		$pp : estadoPosible( idJugador == $id , estado=="Delantero")
	then 
		System.out.println($jugador.getNombre() +" no se realiza mantenimiento");
		retract($pp);		
		update($jugador);
end

/** R05
* Si no entra en ninguna categoría le asigno una especial
*/
rule "No entra en ninguna"
	salience 20
	no-loop
	when
		$jugador : Jugador ($id : id)
		not (estadoPosible( idJugador == $id))
	then 
		System.err.println($jugador.getNombre() +" no califica para ninguna categoria");
end

/****   5 REGLAS   *****/


/** R06
* Si tiene una sola categoría la pongo como definitiva
*/
rule "Una sola categoría"
	salience 30
	no-loop
	when	
		$pp : estadoPosible( $idj : idJugador , $pos : estado )
		$jugador : Jugador (id == $idj, $nombre : nombre);
		not (estadoPosible( idJugador == $idj, estado != $pos))
	then 
		System.out.println($nombre +" es necesariamente " + $pp.getestado());
		$jugador.setestado($pp.getestado());
		update($jugador);
end

/** R07
* Si no es nada reasigno -> delantero?
* Si no es nada reasigno -> Excelente estado
*/
rule "No es nada Reasigno - posible Excelente estado"
	salience 15
	no-loop
	when	
		$jugador : Jugador ($idj : id, capacitacion>4 && velocidad>4,$nombre : nombre);
		not (estadoPosible( idJugador == $idj))
	then 
		System.out.println($nombre +" reasignado a Excelente estado");
		$jugador.setestado("ExcelenteEstado");
end

/** R08
* Si no es nada reasigno -> volante?
* Si no es nada reasigno -> Estado Medio?
*/
rule "No es nada Reasigno - posible Estado Medio"
	salience 15
	no-loop
	when	
		$jugador : Jugador ($idj : id, resistencia>3 && CostoMO>3 && velocidad>3,$nombre : nombre);
		not (estadoPosible( idJugador == $idj))
	then 
		System.out.println($nombre +" reasignado a estado medio");
		$jugador.setestado("EstadoMedio");
end

/** R09
* Si no es nada reasigno -> defensor?
* Si no es nada reasigno -> Mal Estado?
*/
rule "No es nada Reasigno - posible defensor"
	salience 15
	no-loop
	when	
		$jugador : Jugador ($idj : id, resistencia>3 && CostoMO>3 && capacitacion>4,$nombre : nombre);
		not (estadoPosible( idJugador == $idj))
	then 
		System.out.println($nombre +" reasignado a Mal Estado");
		$jugador.setestado("MalEstado");
end

/** R10
* Si no es nada reasigno -> arquero?
* Si no es nada reasigno -> Muy mal estado?
*/
rule "No es nada Reasigno - posible MMEstado"
	salience 15
	no-loop
	when	
		$jugador : Jugador ($idj : id, resistencia>3 && costo>4,$nombre : nombre);
		not (estadoPosible( idJugador == $idj))
	then 
		System.out.println($nombre +" reasignado a Muy mal estado");
		$jugador.setestado("MMEstado");
end

/***   DESAMBIGUACION   ***/
/** R11
* Si es apto para las 4 estadoes?
*/
rule "Super maquina ->Plus Maquinaria"
	salience 35
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, definicion >9);
		$pp1: estadoPosible ( idJugador ==$idj , estado =="MMEstado")
		$pp2: estadoPosible ( idJugador ==$idj , estado =="MalEstado")
		$pp3: estadoPosible ( idJugador ==$idj , estado =="EstadoMedio")
		$pp4: estadoPosible ( idJugador ==$idj , estado =="ExcelenteEstado")
	then 
		System.out.println($nombre +" Super Maquina -> Como Excelente Estado!");
		$jugador.setestado("Excelente estado");
		retract($pp1);
		retract($pp2);
		retract($pp3);
end

/** R12
* Si es apto para las 4 estadoes?
*/
rule "Media maquina ->Plus maquina"
	salience 35
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, amortizacion >9);
		$pp1: estadoPosible ( idJugador ==$idj , estado =="MMEstado")
		$pp2: estadoPosible ( idJugador ==$idj , estado =="MalEstado")
		$pp3: estadoPosible ( idJugador ==$idj , estado =="EstadoMedio")
		$pp4: estadoPosible ( idJugador ==$idj , estado =="ExcelenteEstado")
	then 
		System.out.println($nombre +" Super Maquina -> Como Estado Medio!");
		$jugador.setestado("EstadoMedio");
		retract($pp1);
		retract($pp2);
		retract($pp4);
end

/** R13
* Si es apto para las 4 estadoes?
*/
rule "Mal estado ->Plus Maquina"
	salience 35
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, CostoMO >9);
		$pp1: estadoPosible ( idJugador ==$idj , estado =="MMEstado")
		$pp2: estadoPosible ( idJugador ==$idj , estado =="MalEstado")
		$pp3: estadoPosible ( idJugador ==$idj , estado =="EstadoMedio")
		$pp4: estadoPosible ( idJugador ==$idj , estado =="ExcelenteEstado")
	then 
		System.out.println($nombre +" Super Maquina -> Como Mal Estado");
		$jugador.setestado("MalEstado");
		retract($pp1);
		retract($pp3);
		retract($pp4);
end

/** R14
* Si es apto para las 4 estadoes?
*/
rule "Pesima Maquina ->Plus maquina"
	salience 32
	no-loop
	when	
		$jugador : Jugador ($idj : id,$nombre : nombre, costo >9);
		$pp1: estadoPosible ( idJugador ==$idj , estado =="MMEstado")
		$pp2: estadoPosible ( idJugador ==$idj , estado =="MalEstado")
		$pp3: estadoPosible ( idJugador ==$idj , estado =="EstadoMedio")
		$pp4: estadoPosible ( idJugador ==$idj , estado =="ExcelenteEstado")
	then 
		System.out.println($nombre +" Super Maquina -> Como Muy mal estado!");
		$jugador.setestado("MMEstado");
		retract($pp2);
		retract($pp3);
		retract($pp4);
end